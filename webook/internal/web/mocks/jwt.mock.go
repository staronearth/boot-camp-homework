// Code generated by MockGen. DO NOT EDIT.
// Source: F:\\code\\gitee\\boot-camp-homework\\webook\\internal\\web\\jwt.go

// Package jwtmocks is a generated GoMock package.
package jwtmocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockToken is a mock of Token interface.
type MockToken struct {
	ctrl     *gomock.Controller
	recorder *MockTokenMockRecorder
}

// MockTokenMockRecorder is the mock recorder for MockToken.
type MockTokenMockRecorder struct {
	mock *MockToken
}

// NewMockToken creates a new mock instance.
func NewMockToken(ctrl *gomock.Controller) *MockToken {
	mock := &MockToken{ctrl: ctrl}
	mock.recorder = &MockTokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockToken) EXPECT() *MockTokenMockRecorder {
	return m.recorder
}

// SetJWTToken mocks base method.
func (m *MockToken) SetJWTToken(context *gin.Context, uid int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetJWTToken", context, uid)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetJWTToken indicates an expected call of SetJWTToken.
func (mr *MockTokenMockRecorder) SetJWTToken(context, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetJWTToken", reflect.TypeOf((*MockToken)(nil).SetJWTToken), context, uid)
}
